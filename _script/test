#!/usr/bin/env bash

set -euo pipefail
cd $(dirname $0)/..

### COVERALLS INTEGRATION NOTES ###
# Initially looking official docs
# http://docs.coveralls.io/go
# But using this as a reference for multiple package support
# https://stackoverflow.com/a/33448656

function generate_coveralls_report_all_packages() {
    echo "mode: set" > ${grouped_coveralls_report}
    for dir_with_package in $(go list ./...);
    do
        if [[ ${dir_with_package} != *"/vendor/"* ]]
        then
            individual_report="/tmp/single.coverprofile"
            go test -coverprofile=${individual_report} ${dir_with_package}
            if [[ -f $individual_report ]]
            then
                cat ${individual_report} | grep -v "mode: set" >> ${grouped_coveralls_report}
                rm ${individual_report}
            fi
        fi
    done
}

function coveralls_report() {
    echo "[*] Generating and uploading coveralls report"
    grouped_coveralls_report="/tmp/grouped.coverprofile"
    generate_coveralls_report_all_packages
    goveralls -coverprofile=${grouped_coveralls_report} -service=travis-ci -repotoken $COVERALLS_TOKEN
}

function end_to_end_test(){
    echo "[*] Running basic end to end test"

    TCP_PORT=50421
    NUM_CONNECTIONS=5

    # Run the server
    go run main.go server -p $TCP_PORT -m $NUM_CONNECTIONS  &
    sleep 2

    # Run the client
    res=$(go run main.go run 127.0.0.1 $TCP_PORT -c $NUM_CONNECTIONS -s 1000 -y)

    DESIRED_OUTPUT="Total established connections: $NUM_CONNECTIONS"

    if [[ $res == *${DESIRED_OUTPUT}* ]]; then
        echo "End to end test passed"
    else
        echo "Not reached the desired number of TCP connections"
        echo $res
        exit 1
    fi
}

function main_tests() {
    echo "[*] Running Tests"
    go test -v -cover -race ./...
    end_to_end_test
}

# main()
main_tests
if [[ "$HOME" = "/home/travis" ]]
then
    coveralls_report
fi
